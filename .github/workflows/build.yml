name: Build and Release AWS Lambda Layer for PyODBC

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        msodbc_version: ["18", "17"]
        unixodbc_version: ["2.3.12"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image for AWS Lambda layer
        run: |
          docker build \
            --build-arg PYTHON_VERSIONS="3.12,3.11,3.10,3.9" \
            --build-arg MSODBC_VERSION=${{ matrix.msodbc_version }} \
            --build-arg UNIXODBC_VERSION=${{ matrix.unixodbc_version }} \
            -t pyodbc-lambda-layer:multi-python .

      - name: Create Container and Copy Artifacts
        run: |
          CONTAINER_ID=$(docker create pyodbc-lambda-layer:multi-python)
          docker cp $CONTAINER_ID:/opt/pyodbc-layer-*.zip .
          docker rm $CONTAINER_ID

      - name: Upload PyODBC layer zip as artifact
        uses: actions/upload-artifact@v4
        with:
          name: pyodbc-layer-multi-python
          path: pyodbc-layer-*.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download built artifacts
        uses: actions/download-artifact@v4
        with:
          path: pyodbc-layer
          pattern: pyodbc-layer-*.zip
          merge-multiple: true
      - run: ls -R pyodbc-layer

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "pyodbc-layer/pyodbc-layer-*.zip"
